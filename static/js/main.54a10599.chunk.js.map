{"version":3,"sources":["assets/icons/arrow.svg","components/homepage/index.tsx","interfaces/fetchInterfaces.ts","hooks/useTypedSelector.ts","interfaces/sortInterfaces.ts","components/collection/index.tsx","store/fetchData/index.ts","store/sortData/index.ts","assets/icons/vk.svg","assets/icons/telegram.svg","assets/icons/google.svg","components/about/index.tsx","components/404/index.tsx","components/collection/item/index.tsx","components/header/index.tsx","App.tsx","reportWebVitals.ts","store/reducers/imageReducer.ts","store/reducers/sortReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["Homepage","useState","back","setBack","toMaximum","useEffect","interval","window","setInterval","clearInterval","num","className","map","item","id","to","onClick","src","Arrow","ImageActionTypes","ImageSortActionTypes","useTypedSelector","useSelector","Collection","state","images","error","loaded","sortedImages","sorted","dispatch","useDispatch","a","type","FETCH_IMAGES","axios","get","res","FETCH_IMAGES_SUCCESS","payload","data","sort","b","FETCH_IMAGES_ERROR","SORTED_IMAGES","forSort","JSON","parse","stringify","link","title","date","Date","SORTED_IMAGES_SUCCESS","sortImg","location","reload","pathname","style","background","backgroundSize","backgroundRepeat","About","copy","setCopy","mailRef","useRef","href","target","rel","Telegram","current","focus","select","document","execCommand","setTimeout","Google","Vk","ref","value","readOnly","Error404","Item","useLocation","history","useHistory","alt","goBack","Header","burger","setBurger","headerItems","name","path","from","exact","activeClassName","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initialSortImageState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","render","getElementById"],"mappings":"qWAAe,G,MAAA,IAA0B,mC,OCK1B,SAASA,IACtB,MAAwBC,mBAAiB,GAAzC,mBAAOC,EAAP,KAAaC,EAAb,KAcA,SAASC,IACHF,EAAO,EACTC,EAAQD,EAAO,GACE,GAARA,GACTC,EAAQ,GAhBZE,qBAAU,WACR,IAAMC,EAAWC,OAAOC,aAAY,kBAAMJ,MAAa,MACvD,OAAO,kBAAMK,cAAcH,MAC1B,CAACJ,IAgBJ,IAAMQ,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GAEzB,OACE,sBAAKC,UAAU,WAAf,UACGD,EAAIE,KAAI,SAACC,GAAD,OACP,qBAEEF,UACET,GAAQW,EACJ,uCACA,iBAENC,GAAE,aAAQD,IANLA,MAST,qBAAKF,UAAU,uCAAuCG,GAAG,aAEzD,sBAAKH,UAAU,oBAAf,UACE,mBAAGA,UAAU,wBAAb,4BACA,oBAAIA,UAAU,kBAAd,8BACA,oBAAGA,UAAU,iBAAb,+FAGE,uBAHF,yCAIyC,IACvC,sBAAMA,UAAU,sBAAhB,iBALF,+BASA,cAAC,IAAD,CAAMI,GAAG,cAAcJ,UAAU,iBAAjC,SACE,wBAAQA,UAAU,gBAAlB,+BAIJ,sBAAKA,UAAU,sBAAf,UACE,wBAAQA,UAAU,gBAAgBK,QAjDxC,WACMd,EAAO,EACTC,EAAQD,EAAO,GACE,GAARA,GACTC,EAAQ,IA6CN,SACE,qBAAKc,IAAKC,EAAOP,UAAU,kBAAkBG,GAAG,WAElD,qBAAKH,UAAU,mBAAf,SACGD,EAAIE,KAAI,SAACC,GAAD,OACP,qBAEEF,UACET,GAAQW,EACJ,yCACA,kBAENG,QAAS,kBAAMb,EAAQU,KANlBA,QAUX,wBAAQF,UAAU,gBAAgBK,QAASZ,EAA3C,SACE,qBAAKa,IAAKC,EAAOP,UAAU,kBAAkBG,GAAG,kB,UC/E9CK,E,4DAAAA,K,4BAAAA,E,4CAAAA,E,yCAAAA,M,KCGL,ICDKC,EDCCC,EAAoDC,IEMlD,SAASC,IACtB,MAAkCF,GAAiB,SAACG,GAAD,OAAWA,EAAMC,UAA5DA,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,OACvB,EAAiCN,GAC/B,SAACG,GAAD,OAAWA,EAAMI,gBADXC,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,aAGVE,EAAWC,cAqCjB,OApCA1B,qBAAU,WACRyB,ECHF,uCAAO,WACLA,GADK,eAAAE,EAAA,sEAIHF,EAAS,CAAEG,KAAMd,EAAiBe,eAJ/B,SAMeC,IAAMC,IACtB,qDAPC,cAMGC,EANH,OASHP,EAAS,CACPG,KAAMd,EAAiBmB,qBACvBC,QAASF,EAAIG,KAAKC,MAAK,SAACT,EAAQU,GAAT,OAAoBV,EAAElB,GAAK4B,EAAE5B,QAXnD,kBAaI,CACLW,OAAQY,EAAIG,OAdX,gCAiBHV,EAAS,CAAEG,KAAMd,EAAiBwB,qBAjB/B,yDAAP,yDDIG,IAmCD,sBAAKhC,UAAU,kBAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,mBAAGA,UAAU,iCAAb,qBACA,qBAAKA,UAAU,2BAAf,SACE,wBACEA,UACEkB,EACI,yDACA,0BAGNb,QA5CV,WACgB,GAAVa,EACFC,EAAS,CAAEG,KAAMb,EAAqBwB,gBACnB,GAAVf,GACTC,EEhBC,SAAiBL,GACtB,8CAAO,WAAOK,GAAP,iBAAAE,EAAA,sDACLF,EAAS,CAAEG,KAAMb,EAAqBwB,gBAChCC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUvB,IACpCG,EAAeiB,EAClBjC,KAAI,SAACC,GAAD,MAAiB,CACpBC,GAAID,EAAKC,GACTmC,KAAMpC,EAAKoC,KACXC,MAAOrC,EAAKqC,MACZC,KAAM,IAAIC,KAAKvC,EAAKsC,UAErBV,MAAK,SAACT,EAAQU,GAAT,OAAoBA,EAAES,KAAOnB,EAAEmB,QACvCrB,EAAS,CACPG,KAAMb,EAAqBiC,sBAC3Bd,QAASX,IAbN,2CAAP,sDFea0B,CAAQ7B,KAiCb,6BAaJ,sBAAKd,UAAU,2BAAf,UACE,oBAAIA,UAAU,iCAAd,oBACA,qBAAKA,UAAU,0BAAf,SACIgB,EAEED,EACF,sBAAKf,UAAU,uBAAf,UACE,8DACA,wBACEA,UAAU,0BACVK,QAAS,kBAAMT,OAAOgD,SAASC,UAFjC,uBAOC3B,EAoBHD,EAAahB,KAAI,SAACC,GAAD,OACf,cAAC,IAAD,CACEE,GAAI,CACF0C,SAAS,eAAD,OAAiB5C,EAAKC,IAC9BU,MAAO,CAAEX,SAHb,SAOE,qBACEF,UAAU,wBACV+C,MAAO,CACLC,WAAa,OAAS9C,EAAKoC,KAAO,IAClCW,eAAgB,QAChBC,iBAAkB,gBAPjBhD,EAAKC,OAzBdW,EAAOb,KAAI,SAACC,GAAD,OACT,cAAC,IAAD,CACEE,GAAI,CACF0C,SAAS,eAAD,OAAiB5C,EAAKC,IAC9BU,MAAO,CAAEX,SAHb,SAOE,qBACEF,UAAU,wBACV+C,MAAO,CACLC,WAAa,OAAS9C,EAAKoC,KAAO,IAClCW,eAAgB,QAChBC,iBAAkB,gBAPjBhD,EAAKC,OAlBd,mBAAGH,UAAU,2BAAb,iC,SDvEAS,K,8BAAAA,E,+CAAAA,M,eIFG,MAA0B,+BCA1B,MAA0B,qCCA1B,MAA0B,mCCO1B,SAAS0C,IACtB,MAAwB7D,oBAAkB,GAA1C,mBAAO8D,EAAP,KAAaC,EAAb,KACMC,EAAUC,iBAAyB,MAYzC,OACE,sBAAKvD,UAAU,aAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,oBAAGA,UAAU,mBAAb,2GAGE,uBAHF,kCAKE,uBACA,uBANF,qEAQE,uBARF,uCAUE,uBACA,uBAXF,wDAeA,sBAAKA,UAAU,uBAAf,UACE,wBAAQA,UAAU,mBAAlB,SACE,mBAAGwD,KAAK,2BAA2BC,OAAO,SAASC,IAAI,aAAvD,SACE,qBAAKpD,IAAKqD,QAGd,wBAAQ3D,UAAU,mBAAmBK,QAlC7C,WAC0B,OAApBiD,EAAQM,UACVN,EAAQM,QAAQC,QAChBP,EAAQM,QAAQE,SAChBC,SAASC,YAAY,QACrBX,GAAQ,GACRY,YAAW,kBAAMZ,GAAQ,KAAQ,OA4B7B,SACE,qBAAK/C,IAAK4D,MAEZ,wBAAQlE,UAAU,mBAAlB,SACE,mBACEwD,KAAK,6BACLC,OAAO,SACPC,IAAI,aAHN,SAKE,qBAAKpD,IAAK6D,cAMlB,uBACEC,IAAKd,EACLhC,KAAK,QACLtB,UAAU,mBACVqE,MAAM,6BACNC,UAAQ,IAGV,qBACEtE,UACEoD,EACI,yDACA,0BAJR,SAOE,mBAAGpD,UAAU,2BAAb,yCAGF,cAAC,IAAD,CAAMA,UAAU,mBAAmBI,GAAG,IAAtC,iC,MC3ES,SAASmE,IACtB,OACE,sBAAKvE,UAAU,WAAf,UACE,mBAAGA,UAAU,gBAAb,mBACA,mBAAGA,UAAU,gBAAb,iBACA,mBAAGA,UAAU,kBAAb,uBACA,mBAAGA,UAAU,iBAAb,sD,MCAS,SAASwE,IACtB,IAAM5B,EAAW6B,cACXC,EAAUC,cAERzE,EAAS0C,EAAS/B,MAAlBX,KAER,OACE,qBAAKF,UAAU,YAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAd,SAAkCE,EAAKqC,QACvC,qBAAKvC,UAAU,mBAAmBM,IAAKJ,EAAKoC,KAAMsC,IAAI,aAExD,sBAAK5E,UAAU,kBAAf,UACE,mBAAGA,UAAU,kBAAb,yKAKA,wBACEA,UAAU,qBACVK,QAAS,kBAAMqE,EAAQG,UAFzB,6BCbK,SAASC,IACtB,MAA4BxF,oBAAkB,GAA9C,mBAAOyF,EAAP,KAAeC,EAAf,KAUA,IAAMC,EAAiC,CACrC,CAAEC,KAAM,OAAQC,KAAM,IAAKJ,OAAQ,CAAEK,KAAM,EAAGhF,GAAI,IAClD,CAAE8E,KAAM,aAAcC,KAAM,cAAeJ,OAAQ,CAAEK,KAAM,EAAGhF,GAAI,IAClE,CAAE8E,KAAM,QAASC,KAAM,SAAUJ,OAAQ,CAAEK,KAAM,EAAGhF,GAAI,KAG1D,OACE,eAAC,IAAD,WACE,qBAAKJ,UAAW+E,EAAS,uBAAyB,SAAlD,SACGE,EAAYhF,KAAI,SAACC,GAAD,OACf,cAAC,IAAD,CAEEmF,OAAK,EACLjF,GAAIF,EAAKiF,KACTnF,UAAU,eACVsF,gBAAgB,sBAChBjF,QAAS,kBAAM2E,GAAU,IAN3B,SAQG9E,EAAKgF,MAPDhF,EAAK6E,OAAOK,WAYvB,wBAAQpF,UAAU,SAASK,QA/B/B,WAEI2E,EADY,GAAVD,IA8BF,SACGE,EAAYhF,KAAI,SAACC,GAAD,OACf,qBAEEF,UACE,oCAAC+E,EAEgC7E,EAAK6E,OAAO3E,GADZF,EAAK6E,OAAOK,OAH1ClF,EAAK6E,OAAOK,WAUvB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,IAAII,UAAWlG,IACjC,cAAC,IAAD,CAAOgG,OAAK,EAACF,KAAK,cAAcI,UAAW3E,IAC3C,cAAC,IAAD,CAAOuE,KAAK,SAASI,UAAWpC,IAChC,cAAC,IAAD,CAAOgC,KAAK,kBAAkBI,UAAWf,IACzC,cAAC,IAAD,CAAOW,KAAK,IAAII,UAAWhB,UC3DpBiB,MAJf,WACE,OAAO,cAACV,EAAD,KCSMW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCHRQ,EAA2B,CAC/BpF,OAAQ,GACRE,QAAQ,EACRD,OAAO,GCHT,IAAMoF,EAAwC,CAC5ClF,aAAc,GACdC,QAAQ,GCJH,IAAMkF,EAAcC,YAAgB,CACzCvF,OFOK,WAGQ,IAFbD,EAEY,uDAFJqF,EACRI,EACY,uCACZ,OAAQA,EAAOhF,MACb,KAAKd,EAAiBe,aACpB,MAAO,CAAET,OAAQ,GAAIE,QAAQ,EAAOD,OAAO,GAC7C,KAAKP,EAAiBmB,qBACpB,MAAO,CAAEb,OAAQwF,EAAO1E,QAASZ,QAAQ,EAAMD,OAAO,GACxD,KAAKP,EAAiBwB,mBACpB,MAAO,CAAElB,OAAQ,GAAIE,QAAQ,EAAMD,OAAO,GAC5C,QACE,OAAOF,IElBXI,aDKK,WAGY,IAFjBJ,EAEgB,uDAFRsF,EACRG,EACgB,uCAChB,OAAQA,EAAOhF,MACb,KAAKb,EAAqBwB,cACxB,MAAO,CAAEhB,aAAc,GAAIC,QAASL,EAAMK,QAC5C,KAAKT,EAAqBiC,sBACxB,MAAO,CAAEzB,aAAcqF,EAAO1E,QAASV,QAAQ,GACjD,QACE,OAAOL,MEjBA0F,EAAQC,YAAYJ,EAAaK,YAAgBC,MCI9DC,iBACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFxC,SAAS6C,eAAe,SAG1BnB,M","file":"static/js/main.54a10599.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow.526845e8.svg\";","import React, { useState, useEffect } from \"react\";\nimport \"./home.scss\";\nimport { Link } from \"react-router-dom\";\nimport Arrow from \"../../assets/icons/arrow.svg\";\n\nexport default function Homepage(): JSX.Element {\n  const [back, setBack] = useState<number>(1);\n\n  useEffect(() => {\n    const interval = window.setInterval(() => toMaximum(), 15000);\n    return () => clearInterval(interval);\n  }, [back]);\n\n  function toMinimum() {\n    if (back > 1) {\n      setBack(back - 1);\n    } else if (back == 1) {\n      setBack(5);\n    }\n  }\n  function toMaximum(): void {\n    if (back < 5) {\n      setBack(back + 1);\n    } else if (back == 5) {\n      setBack(1);\n    }\n  }\n  const num = [1, 2, 3, 4, 5];\n\n  return (\n    <div className=\"homepage\">\n      {num.map((item) => (\n        <div\n          key={item}\n          className={\n            back == item\n              ? \"homepage__tabs homepage__tabs_active\"\n              : \"homepage__tabs\"\n          }\n          id={`bg-${item}`}\n        />\n      ))}\n      <div className=\"homepage__tabs homepage__tabs_active\" id=\"darkness\" />\n\n      <div className=\"homepage__content\">\n        <p className=\"homepage__upper-title\">React creation</p>\n        <h2 className=\"homepage__title\">Image collection</h2>\n        <p className=\"homepage__text\">\n          This website was made with the help of react for showing junior (and\n          maybe middle)\n          <br />\n          skills in frontend coding and creating{\" \"}\n          <span className=\"homepage__text-span\">SPA</span> using react\n          technologies\n        </p>\n\n        <Link to=\"/collection\" className=\"homepage__link\">\n          <button className=\"homepage__CTA\">Check images</button>\n        </Link>\n      </div>\n\n      <div className=\"homepage__tabs-btns\">\n        <button className=\"homepage__btn\" onClick={toMinimum}>\n          <img src={Arrow} className=\"homepage__arrow\" id=\"left\" />\n        </button>\n        <div className=\"homepage__points\">\n          {num.map((item) => (\n            <div\n              key={item}\n              className={\n                back == item\n                  ? \"homepage__point homepage__point_active\"\n                  : \"homepage__point\"\n              }\n              onClick={() => setBack(item)}\n            />\n          ))}\n        </div>\n        <button className=\"homepage__btn\" onClick={toMaximum}>\n          <img src={Arrow} className=\"homepage__arrow\" id=\"right\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","export enum ImageActionTypes {\n  FETCH_IMAGES = \"FETCH_IMAGES\",\n  FETCH_IMAGES_SUCCESS = \"FETCH_IMAGES_SUCCESS\",\n  FETCH_IMAGES_ERROR = \"FETCH_IMAGES_ERROR\",\n}\n\nexport interface Elem {\n  id: string;\n  link: string;\n  title: string;\n  date: string;\n}\n\nexport interface ImageState {\n  images: Array<Elem>;\n  loaded: boolean;\n  error: boolean;\n}\n\ninterface FetchImageAction {\n  type: ImageActionTypes.FETCH_IMAGES;\n}\ninterface FetchImageActionSuccess {\n  type: ImageActionTypes.FETCH_IMAGES_SUCCESS;\n  payload: Array<Elem>;\n}\ninterface FetchImageActionError {\n  type: ImageActionTypes.FETCH_IMAGES_ERROR;\n}\n\nexport type ImageAction =\n  | FetchImageAction\n  | FetchImageActionSuccess\n  | FetchImageActionError;\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../store/reducers\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Elem } from \"./fetchInterfaces\";\n\nexport enum ImageSortActionTypes {\n  SORTED_IMAGES = \"SORTED_IMAGES\",\n  SORTED_IMAGES_SUCCESS = \"SORTED_IMAGES_SUCCESS\",\n}\n\nexport interface SortImageState {\n  sortedImages: Array<Elem>;\n  sorted: boolean;\n}\n\ninterface SortImageAction {\n  type: ImageSortActionTypes.SORTED_IMAGES;\n}\ninterface SortImageActionSuccess {\n  type: ImageSortActionTypes.SORTED_IMAGES_SUCCESS;\n  payload: Array<Elem>;\n}\n\nexport type SortAction = SortImageAction | SortImageActionSuccess;\n","import React, { useEffect } from \"react\";\nimport \"./collection.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchImg } from \"../../store/fetchData\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { sortImg } from \"../../store/sortData\";\nimport { ImageSortActionTypes } from \"../../interfaces/sortInterfaces\";\n\nexport default function Collection(): JSX.Element {\n  const { images, error, loaded } = useTypedSelector((state) => state.images);\n  const { sorted, sortedImages } = useTypedSelector(\n    (state) => state.sortedImages\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchImg());\n  }, []);\n\n  function reduxSortClick() {\n    if (sorted == true) {\n      dispatch({ type: ImageSortActionTypes.SORTED_IMAGES });\n    } else if (sorted == false) {\n      dispatch(sortImg(images));\n    }\n  }\n\n  //  const [sorted, setSorted] = React.useState<boolean>(false);\n  //  const [sortedImages, setSortedImages] = React.useState<Elem[]>([]);\n  //  function sortImages(): void {\n  //    const sortImages = JSON.parse(JSON.stringify(images));\n  //    const completeSortedImages = sortImages\n  //      .map((item: Elem) => ({\n  //        id: item.id,\n  //        link: item.link,\n  //        title: item.title,\n  //        date: new Date(item.date),\n  //      }))\n  //      .sort((a: any, b: any) => b.date - a.date);\n  //    // console.log(completeSortedImages);\n  //    setSorted(true);\n  //    setSortedImages(completeSortedImages);\n  //  }\n  //  function sortClick(): void {\n  //    if (!sorted) {\n  //      sortImages();\n  //    } else {\n  //      setSorted(false);\n  //    }\n  //  }\n\n  return (\n    <div className=\"collection-page\">\n      <div className=\"collection-page__filters\">\n        <p className=\"collection-page__filters-title\">Filters</p>\n        <div className=\"collcetion-page__buttons\">\n          <button\n            className={\n              sorted\n                ? \"collection-page__button collection-page__button_active\"\n                : \"collection-page__button\"\n            }\n            // onClick={sortClick}\n            onClick={reduxSortClick}\n          >\n            New to old\n          </button>\n        </div>\n      </div>\n      <div className=\"collection-page__content\">\n        <h3 className=\"collection-page__content-title\">Images</h3>\n        <div className=\"collection-page__images\">\n          {!loaded ? (\n            <p className=\"collection-page__loading\">Loading...</p>\n          ) : error ? (\n            <div className=\"collection-page__err\">\n              <p>Sorry, the connection is lost</p>\n              <button\n                className=\"collection-page__reload\"\n                onClick={() => window.location.reload()}\n              >\n                Reload\n              </button>\n            </div>\n          ) : !sorted ? (\n            images.map((item) => (\n              <Link\n                to={{\n                  pathname: `/collection/${item.id}`,\n                  state: { item },\n                }}\n                key={item.id}\n              >\n                <div\n                  className=\"collection-page__card\"\n                  style={{\n                    background: (\"url(\" + item.link + \")\") as string,\n                    backgroundSize: \"cover\" as string,\n                    backgroundRepeat: \"no-repeat\" as string,\n                  }}\n                />\n              </Link>\n            ))\n          ) : (\n            sortedImages.map((item) => (\n              <Link\n                to={{\n                  pathname: `/collection/${item.id}`,\n                  state: { item },\n                }}\n                key={item.id}\n              >\n                <div\n                  className=\"collection-page__card\"\n                  style={{\n                    background: (\"url(\" + item.link + \")\") as string,\n                    backgroundSize: \"cover\" as string,\n                    backgroundRepeat: \"no-repeat\" as string,\n                  }}\n                />\n              </Link>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  Elem,\n  ImageAction,\n  ImageActionTypes,\n} from \"../../interfaces/fetchInterfaces\";\n\ninterface Returned {\n  images: Array<Elem>;\n}\n\nexport function fetchImg() {\n  return async (\n    dispatch: Dispatch<ImageAction>\n  ): Promise<Returned | undefined> => {\n    try {\n      dispatch({ type: ImageActionTypes.FETCH_IMAGES });\n      // const res = await axios.get(\"http://localhost:5000/images\");\n      const res = await axios.get(\n        \"https://intense-cliffs-94475.herokuapp.com/images\"\n      );\n      dispatch({\n        type: ImageActionTypes.FETCH_IMAGES_SUCCESS,\n        payload: res.data.sort((a: any, b: any) => a.id - b.id),\n      });\n      return {\n        images: res.data as Array<Elem>,\n      };\n    } catch (err) {\n      dispatch({ type: ImageActionTypes.FETCH_IMAGES_ERROR });\n    }\n  };\n}\n","import { Dispatch } from \"redux\";\nimport { Elem } from \"../../interfaces/fetchInterfaces\";\nimport {\n  ImageSortActionTypes,\n  SortAction,\n} from \"../../interfaces/sortInterfaces\";\n\nexport function sortImg(images: Array<Elem>) {\n  return async (dispatch: Dispatch<SortAction>): Promise<void> => {\n    dispatch({ type: ImageSortActionTypes.SORTED_IMAGES });\n    const forSort = JSON.parse(JSON.stringify(images));\n    const sortedImages = forSort\n      .map((item: Elem) => ({\n        id: item.id,\n        link: item.link,\n        title: item.title,\n        date: new Date(item.date),\n      }))\n      .sort((a: any, b: any) => b.date - a.date);\n    dispatch({\n      type: ImageSortActionTypes.SORTED_IMAGES_SUCCESS,\n      payload: sortedImages,\n    });\n  };\n}\n","export default __webpack_public_path__ + \"static/media/vk.f8937a21.svg\";","export default __webpack_public_path__ + \"static/media/telegram.746bb8a2.svg\";","export default __webpack_public_path__ + \"static/media/google.41100058.svg\";","import React, { useRef, useState } from \"react\";\nimport \"./about.scss\";\nimport { Link } from \"react-router-dom\";\nimport Vk from \"../../assets/icons/vk.svg\";\nimport Telegram from \"../../assets/icons/telegram.svg\";\nimport Google from \"../../assets/icons/google.svg\";\n\nexport default function About(): JSX.Element {\n  const [copy, setCopy] = useState<boolean>(false);\n  const mailRef = useRef<HTMLInputElement>(null);\n\n  function testing(): void {\n    if (mailRef.current !== null) {\n      mailRef.current.focus();\n      mailRef.current.select();\n      document.execCommand(\"copy\");\n      setCopy(true);\n      setTimeout(() => setCopy(false), 3000);\n    }\n  }\n\n  return (\n    <div className=\"about-page\">\n      <div className=\"about-page__content\">\n        <p className=\"about-page__text\">\n          Hello, this is Pesochenski’s small react pet-project, made for show\n          some junior or middle\n          <br />\n          skills in frontend development.\n          <br />\n          <br />\n          This small website is the part of Pesochenski’s portfolio for\n          <br />\n          office(but of course not only) work.\n          <br />\n          <br />\n          Done with love to IT sphere. Thanks for whatching!\n        </p>\n\n        <div className=\"about-page__contacts\">\n          <button className=\"about-page__site\">\n            <a href=\"https://t.me/pesochenski\" target=\"_blank\" rel=\"noreferrer\">\n              <img src={Telegram} />\n            </a>\n          </button>\n          <button className=\"about-page__site\" onClick={testing}>\n            <img src={Google} />\n          </button>\n          <button className=\"about-page__site\">\n            <a\n              href=\"https://vk.com/pesochenski\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <img src={Vk} />\n            </a>\n          </button>\n        </div>\n      </div>\n\n      <input\n        ref={mailRef}\n        type=\"email\"\n        className=\"about-page__mail\"\n        value=\"pesochenski.corp@gmail.com\"\n        readOnly\n      />\n\n      <div\n        className={\n          copy\n            ? \"about-page__mail-copied about-page__mail-copied_active\"\n            : \"about-page__mail-copied\"\n        }\n      >\n        <p className=\"about-page__title-copied\">Email copied to clipboard</p>\n      </div>\n\n      <Link className=\"about-page__link\" to=\"/\">\n        Back to homepage\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./error.scss\";\n\nexport default function Error404(): JSX.Element {\n  return (\n    <div className=\"err-page\">\n      <p className=\"err-page__err\">Error</p>\n      <p className=\"err-page__404\">404</p>\n      <p className=\"err-page__title\">Not found</p>\n      <p className=\"err-page__text\">Try to check your internet connection</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./item.scss\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Elem } from \"../../../interfaces/fetchInterfaces\";\n\ninterface customState {\n  item: Elem;\n}\n\nexport default function Item(): JSX.Element {\n  const location = useLocation();\n  const history = useHistory();\n\n  const { item } = location.state as customState;\n\n  return (\n    <div className=\"item-page\">\n      <div className=\"item-page__content\">\n        <div className=\"item-page__main\">\n          <h3 className=\"item-page__title\">{item.title}</h3>\n          <img className=\"item-page__image\" src={item.link} alt=\"Image\" />\n        </div>\n        <div className=\"item-page__info\">\n          <p className=\"item-page__text\">\n            This item page shows some information about cards, including title\n            of the image and ability to go back to the collection. So, you can\n            test and estimate it.\n          </p>\n          <button\n            className=\"item-page__go-back\"\n            onClick={() => history.goBack()}\n          >\n            Go back\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./header.scss\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport Homepage from \"../homepage\";\nimport Collection from \"../collection\";\nimport About from \"../about\";\nimport Error404 from \"../404\";\nimport Item from \"../collection/item\";\nimport { headerItem } from \"../../interfaces/headerInterfaces\";\n\nexport default function Header(): JSX.Element {\n  const [burger, setBurger] = useState<boolean>(false);\n\n  function changeBurgerState(): void {\n    if (burger == false) {\n      setBurger(true);\n    } else {\n      setBurger(false);\n    }\n  }\n\n  const headerItems: Array<headerItem> = [\n    { name: \"Home\", path: \"/\", burger: { from: 1, to: 2 } },\n    { name: \"Collection\", path: \"/collection\", burger: { from: 2, to: 3 } },\n    { name: \"About\", path: \"/about\", burger: { from: 3, to: 1 } },\n  ];\n\n  return (\n    <Router>\n      <nav className={burger ? \"navbar navbar_active\" : \"navbar\"}>\n        {headerItems.map((item) => (\n          <NavLink\n            key={item.burger.from}\n            exact\n            to={item.path}\n            className=\"navbar__link\"\n            activeClassName=\"navbar__link_active\"\n            onClick={() => setBurger(false)}\n          >\n            {item.name}\n          </NavLink>\n        ))}\n      </nav>\n\n      <button className=\"burger\" onClick={changeBurgerState}>\n        {headerItems.map((item) => (\n          <div\n            key={item.burger.from}\n            className={\n              !burger\n                ? `burger__item burger__item-${item.burger.from}`\n                : `burger__item burger__item-${item.burger.to}`\n            }\n          />\n        ))}\n      </button>\n\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route exact path=\"/collection\" component={Collection} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/collection/:id\" component={Item} />\n        <Route path=\"*\" component={Error404} />\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport Header from \"./components/header/index\";\n\nfunction App(): JSX.Element {\n  return <Header />;\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  ImageAction,\n  ImageState,\n  ImageActionTypes,\n} from \"../../interfaces/fetchInterfaces\";\n\nconst initialState: ImageState = {\n  images: [],\n  loaded: false,\n  error: false,\n};\n\nexport function imageReducer(\n  state = initialState,\n  action: ImageAction\n): ImageState {\n  switch (action.type) {\n    case ImageActionTypes.FETCH_IMAGES:\n      return { images: [], loaded: false, error: false };\n    case ImageActionTypes.FETCH_IMAGES_SUCCESS:\n      return { images: action.payload, loaded: true, error: false };\n    case ImageActionTypes.FETCH_IMAGES_ERROR:\n      return { images: [], loaded: true, error: true };\n    default:\n      return state;\n  }\n}\n","import {\n  SortImageState,\n  SortAction,\n  ImageSortActionTypes,\n} from \"../../interfaces/sortInterfaces\";\n\nconst initialSortImageState: SortImageState = {\n  sortedImages: [],\n  sorted: false,\n};\n\nexport function sortReducer(\n  state = initialSortImageState,\n  action: SortAction\n): SortImageState {\n  switch (action.type) {\n    case ImageSortActionTypes.SORTED_IMAGES:\n      return { sortedImages: [], sorted: !state.sorted };\n    case ImageSortActionTypes.SORTED_IMAGES_SUCCESS:\n      return { sortedImages: action.payload, sorted: true };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { imageReducer } from \"./imageReducer\";\nimport { sortReducer } from \"./sortReducer\";\n\nexport const rootReducer = combineReducers({\n  images: imageReducer,\n  sortedImages: sortReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./reducers\";\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}